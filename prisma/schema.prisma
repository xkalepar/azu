datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model University {
  id                              String                            @id @default(auto()) @map("_id") @db.ObjectId
  logo                            String
  gallery                         String[]
  News                            News[]
  ArContent                       ArContent?                        @relation(fields: [arContentId], references: [id])
  arContentId                     String?                           @db.ObjectId
  EnContent                       EnContent?                        @relation(fields: [enContentId], references: [id])
  enContentId                     String?                           @db.ObjectId
  Centers                         Centers[]
  AcademicProgram                 AcademicProgram[]
  FacilitiesAndServices           FacilitiesAndServices[]
  GraduatesForUniversity          GraduatesForUniversity[]
  ScientificResearchForUniversity ScientificResearchForUniversity[]
  UniversityActivities            UniversityActivities[]
  Projects                        Projects[]
  SocialMedia                     SocialMedia?
}

model Centers {
  id           String      @id @default(auto()) @map("_id") @db.ObjectId
  arContent    ArContent?  @relation(fields: [arContentId], references: [id])
  enContent    EnContent?  @relation(fields: [enContentId], references: [id])
  arContentId  String?     @db.ObjectId
  enContentId  String?     @db.ObjectId
  University   University? @relation(fields: [universityId], references: [id])
  universityId String?     @db.ObjectId
}

model Projects {
  id           String      @id @default(auto()) @map("_id") @db.ObjectId
  arContent    ArContent?  @relation(fields: [arContentId], references: [id])
  enContent    EnContent?  @relation(fields: [enContentId], references: [id])
  arContentId  String?     @db.ObjectId
  enContentId  String?     @db.ObjectId
  University   University? @relation(fields: [universityId], references: [id])
  universityId String?     @db.ObjectId
}

model AcademicProgram {
  id           String      @id @default(auto()) @map("_id") @db.ObjectId
  arContent    ArContent?  @relation(fields: [arContentId], references: [id])
  enContent    EnContent?  @relation(fields: [enContentId], references: [id])
  arContentId  String?     @db.ObjectId
  enContentId  String?     @db.ObjectId
  University   University? @relation(fields: [universityId], references: [id])
  universityId String?     @db.ObjectId
}

model FacilitiesAndServices {
  id           String      @id @default(auto()) @map("_id") @db.ObjectId
  arContent    ArContent?  @relation(fields: [arContentId], references: [id])
  enContent    EnContent?  @relation(fields: [enContentId], references: [id])
  arContentId  String?     @db.ObjectId
  enContentId  String?     @db.ObjectId
  University   University? @relation(fields: [universityId], references: [id])
  universityId String?     @db.ObjectId
}

model UniversityActivities {
  id           String      @id @default(auto()) @map("_id") @db.ObjectId
  arContent    ArContent?  @relation(fields: [arContentId], references: [id])
  enContent    EnContent?  @relation(fields: [enContentId], references: [id])
  arContentId  String?     @db.ObjectId
  enContentId  String?     @db.ObjectId
  University   University? @relation(fields: [universityId], references: [id])
  universityId String?     @db.ObjectId
}

model GraduatesForUniversity {
  id           String      @id @default(auto()) @map("_id") @db.ObjectId
  arContent    ArContent?  @relation(fields: [arContentId], references: [id])
  enContent    EnContent?  @relation(fields: [enContentId], references: [id])
  arContentId  String?     @db.ObjectId
  enContentId  String?     @db.ObjectId
  University   University? @relation(fields: [universityId], references: [id])
  universityId String?     @db.ObjectId
}

model ScientificResearchForUniversity {
  id           String      @id @default(auto()) @map("_id") @db.ObjectId
  arContent    ArContent?  @relation(fields: [arContentId], references: [id])
  enContent    EnContent?  @relation(fields: [enContentId], references: [id])
  arContentId  String?     @db.ObjectId
  enContentId  String?     @db.ObjectId
  University   University? @relation(fields: [universityId], references: [id])
  universityId String?     @db.ObjectId
}

model Collage {
  id                                       String                                  @id @default(auto()) @map("_id") @db.ObjectId
  logo                                     String                                  @default("https://utfs.io/f/bb000768-6c27-41cb-9900-3718263431c2-13qw.jpg")
  ArCollageData                            ArCollageData?                          @relation(fields: [arabicId], references: [id])
  arabicId                                 String?                                 @db.ObjectId
  EnCollageData                            EnCollageData?                          @relation(fields: [englishId], references: [id])
  englishId                                String?                                 @db.ObjectId
  category                                 Category                                @default(one)
  gallery                                  String[]
  views                                    Int                                     @default(0)
  Statics                                  Statics[]
  Links                                    Link[]
  welcome                                  String?
  enWelcome                                String?
  TheOfficesAndAdministrativeDepartments   TheOfficesAndAdministrativeDepartments? @relation(fields: [theOfficesAndAdministrativeDepartmentsId], references: [id])
  GraduateStudies                          GraduateStudies?                        @relation(fields: [graduateStudiesId], references: [id])
  ScientificResearch                       ScientificResearch?                     @relation(fields: [scientificResearchId], references: [id])
  Students                                 Students?                               @relation(fields: [studentsId], references: [id])
  Graduates                                Graduates?                              @relation(fields: [graduatesId], references: [id])
  CollegeActivities                        CollegeActivities?                      @relation(fields: [collegeActivitiesId], references: [id])
  EServices                                EServices?                              @relation(fields: [eServicesId], references: [id])
  FormsAndApplications                     FormsAndApplications?                   @relation(fields: [formsAndApplicationsId], references: [id])
  ScientificSection                        ScientificSection[]
  graduateStudiesId                        String?                                 @db.ObjectId
  theOfficesAndAdministrativeDepartmentsId String?                                 @db.ObjectId
  scientificResearchId                     String?                                 @db.ObjectId
  studentsId                               String?                                 @db.ObjectId
  graduatesId                              String?                                 @db.ObjectId
  collegeActivitiesId                      String?                                 @db.ObjectId
  eServicesId                              String?                                 @db.ObjectId
  formsAndApplicationsId                   String?                                 @db.ObjectId
  News                                     News[]
  location                                 String?
  SocialMedia                              SocialMedia?
  User                                     User[]
}

/// االأقسام العلمية
model ScientificSection {
  id                     String           @id @default(auto()) @map("_id") @db.ObjectId
  ArContent              ArContent?       @relation(fields: [arContentId], references: [id])
  EnContent              EnContent?       @relation(fields: [enContentId], references: [id])
  News                   News[]
  gallery                String[]
  WordsGraduates         WordsGraduates[]
  Links                  Link[]
  views                  Int              @default(0)
  Collage                Collage?         @relation(fields: [collageId], references: [id])
  collageId              String?          @db.ObjectId
  arContentId            String?          @db.ObjectId
  enContentId            String?          @db.ObjectId
  /// منسقي القسم
  departmentCoordinators SectionPage[]    @relation("DepartmentCoordinators")

  /// الشؤون االكاديمية
  AcademicAffairs              SectionPage[] @relation("AcademicAffairs")
  /// معامل القسم
  DepartmentLaboratories       SectionPage[] @relation("DepartmentLaboratories")
  /// كادر القسم
  DepartmentStaffs             SectionPage[] @relation("DepartmentStaff")
  /// دليل االرشاد االكاديمي
  AcademicGuidanceHandbook     SectionPage[] @relation("AcademicGuidanceHandbook")
  /// نماذج وادلة القسم
  DepartmentFormsAndGuidelines SectionPage[] @relation("DepartmentFormsAndGuidelines")
}

model SectionPage {
  id                             String             @id @default(auto()) @map("_id") @db.ObjectId
  ArContent                      ArContent?         @relation(fields: [arContentId], references: [id])
  EnContent                      EnContent?         @relation(fields: [enContentId], references: [id])
  arContentId                    String?            @db.ObjectId
  enContentId                    String?            @db.ObjectId
  DepartmentCoordinators         ScientificSection? @relation("DepartmentCoordinators", fields: [departmentCoordinatorsId], references: [id])
  departmentCoordinatorsId       String?            @db.ObjectId
  AcademicAffairs                ScientificSection? @relation("AcademicAffairs", fields: [academicAffairsId], references: [id])
  academicAffairsId              String?            @db.ObjectId
  DepartmentLaboratories         ScientificSection? @relation("DepartmentLaboratories", fields: [departmentLaboratoriesid], references: [id])
  departmentLaboratoriesid       String?            @db.ObjectId
  DepartmentStaff                ScientificSection? @relation("DepartmentStaff", fields: [departmentStaffId], references: [id])
  departmentStaffId              String?            @db.ObjectId
  AcademicGuidanceHandbook       ScientificSection? @relation("AcademicGuidanceHandbook", fields: [academicGuidanceHandbookId], references: [id])
  academicGuidanceHandbookId     String?            @db.ObjectId
  DepartmentFormsAndGuidelines   ScientificSection? @relation("DepartmentFormsAndGuidelines", fields: [departmentFormsAndGuidelinesId], references: [id])
  departmentFormsAndGuidelinesId String?            @db.ObjectId
  User                           User[]
  ///             @relation(fields: [userIds], references: [id])
  /// userIds                        String[]           @db.ObjectId
}

/// المكاتب واالقسام االدارية
model TheOfficesAndAdministrativeDepartments {
  id      String    @id @default(auto()) @map("_id") @db.ObjectId
  Pages   Page[]
  Collage Collage[]
}

///الدراسات العليا
model GraduateStudies {
  id      String    @id @default(auto()) @map("_id") @db.ObjectId
  Pages   Page[]
  Collage Collage[]
}

///البحث العلمي
model ScientificResearch {
  id      String    @id @default(auto()) @map("_id") @db.ObjectId
  Pages   Page[]
  Collage Collage[]
}

///الطلاب 
model Students {
  id      String    @id @default(auto()) @map("_id") @db.ObjectId
  Pages   Page[]
  Collage Collage[]
}

///الخريجون 
model Graduates {
  id      String    @id @default(auto()) @map("_id") @db.ObjectId
  Pages   Page[]
  Collage Collage[]
}

///انشطة الكلية 
model CollegeActivities {
  id      String    @id @default(auto()) @map("_id") @db.ObjectId
  Pages   Page[]
  Collage Collage[]
}

/// الخدمات االإكترونية
model EServices {
  id      String    @id @default(auto()) @map("_id") @db.ObjectId
  Pages   Page[]
  Collage Collage[]
}

/// نماذج واستمارات
model FormsAndApplications {
  id      String    @id @default(auto()) @map("_id") @db.ObjectId
  Pages   Page[]
  Collage Collage[]
}

model Statics {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  content   String
  Collage   Collage? @relation(fields: [collageId], references: [id])
  collageId String?  @db.ObjectId
}

model SocialMedia {
  id           String      @id @default(auto()) @map("_id") @db.ObjectId
  facebook     String?
  whatsapp     String?
  youtube      String?
  email        String?
  telegram     String?
  phone1       String?
  phone2       String?
  fax          String?
  x            String?
  address      String?
  location     String?
  Collage      Collage?    @relation(fields: [collageId], references: [id])
  University   University? @relation(fields: [universityId], references: [id])
  collageId    String?     @unique @db.ObjectId
  universityId String?     @unique @db.ObjectId
}

model News {
  id                  String             @id @default(auto()) @map("_id") @db.ObjectId
  image               String             @default("https://utfs.io/f/bb000768-6c27-41cb-9900-3718263431c2-13qw.jpg")
  ScientificSection   ScientificSection? @relation(fields: [scientificSectionId], references: [id])
  scientificSectionId String?            @db.ObjectId
  Collage             Collage?           @relation(fields: [collageId], references: [id])
  collageId           String?            @db.ObjectId
  arContent           ArContent?         @relation(fields: [arContentId], references: [id])
  enContent           EnContent?         @relation(fields: [enContentId], references: [id])
  arContentId         String?            @db.ObjectId
  enContentId         String?            @db.ObjectId
  University          University?        @relation(fields: [universityId], references: [id])
  universityId        String?            @db.ObjectId
  createdAt           DateTime           @default(now())
  updatedAt           DateTime           @updatedAt
}

/// [ArContent] put the data into it in  ar
model ArContent {
  id                              String                            @id @default(auto()) @map("_id") @db.ObjectId
  title                           String
  body                            String
  News                            News[]
  ScientificSection               ScientificSection[]
  SectionPage                     SectionPage[]
  University                      University[]
  Mangzine                        Mangzine[]
  Conferences                     Conferences[]
  Centers                         Centers[]
  AcademicProgram                 AcademicProgram[]
  FacilitiesAndServices           FacilitiesAndServices[]
  GraduatesForUniversity          GraduatesForUniversity[]
  ScientificResearchForUniversity ScientificResearchForUniversity[]
  UniversityActivities            UniversityActivities[]
  Projects                        Projects[]
}

/// [EnContent] put the data into it in  ar
model EnContent {
  id                              String                            @id @default(auto()) @map("_id") @db.ObjectId
  title                           String
  body                            String
  News                            News[]
  ScientificSection               ScientificSection[]
  SectionPage                     SectionPage[]
  University                      University[]
  Mangzine                        Mangzine[]
  Conferences                     Conferences[]
  Centers                         Centers[]
  AcademicProgram                 AcademicProgram[]
  FacilitiesAndServices           FacilitiesAndServices[]
  GraduatesForUniversity          GraduatesForUniversity[]
  ScientificResearchForUniversity ScientificResearchForUniversity[]
  UniversityActivities            UniversityActivities[]
  Projects                        Projects[]
}

model Link {
  id                  String             @id @default(auto()) @map("_id") @db.ObjectId
  content             String
  href                String
  blank               Boolean            @default(false)
  Collage             Collage?           @relation(fields: [collageId], references: [id])
  collageId           String?            @db.ObjectId
  ScientificSection   ScientificSection? @relation(fields: [scientificSectionId], references: [id])
  scientificSectionId String?            @db.ObjectId
}

model ArCollageData {
  id      String    @id @default(auto()) @map("_id") @db.ObjectId
  title   String
  content String
  Collage Collage[]
}

model EnCollageData {
  id      String    @id @default(auto()) @map("_id") @db.ObjectId
  title   String
  content String
  Collage Collage[]
}

//// dynamic page
////` return 
////  `title String`
////  `body String`
////`
model Page {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  title   String
  body    String
  enTitle String
  enBody  String

  TheOfficesAndAdministrativeDepartments   TheOfficesAndAdministrativeDepartments? @relation(fields: [theOfficesAndAdministrativeDepartmentsId], references: [id])
  theOfficesAndAdministrativeDepartmentsId String?                                 @db.ObjectId
  GraduateStudies                          GraduateStudies?                        @relation(fields: [graduateStudiesId], references: [id])
  graduateStudiesId                        String?                                 @db.ObjectId
  ScientificResearch                       ScientificResearch?                     @relation(fields: [scientificResearchId], references: [id])
  scientificResearchId                     String?                                 @db.ObjectId
  Students                                 Students?                               @relation(fields: [studentsId], references: [id])
  studentsId                               String?                                 @db.ObjectId
  Graduates                                Graduates?                              @relation(fields: [graduatesId], references: [id])
  graduatesId                              String?                                 @db.ObjectId
  CollegeActivities                        CollegeActivities?                      @relation(fields: [collegeActivitiesId], references: [id])
  collegeActivitiesId                      String?                                 @db.ObjectId
  EServices                                EServices?                              @relation(fields: [eServicesId], references: [id])
  eServicesId                              String?                                 @db.ObjectId
  FormsAndApplications                     FormsAndApplications?                   @relation(fields: [formsAndApplicationsId], references: [id])
  formsAndApplicationsId                   String?                                 @db.ObjectId
}

model WordsGraduates {
  id                  String             @id @default(auto()) @map("_id") @db.ObjectId
  avatar              String
  content             String
  ScientificSection   ScientificSection? @relation(fields: [scientificSectionId], references: [id])
  scientificSectionId String?            @db.ObjectId
}

enum Category {
  one
  two
  three
}

model Mangzine {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  arContent   ArContent? @relation(fields: [arContentId], references: [id])
  enContent   EnContent? @relation(fields: [enContentId], references: [id])
  pdfUri      String?
  arContentId String?    @db.ObjectId
  enContentId String?    @db.ObjectId
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  logo        String     @default("https://utfs.io/f/bb000768-6c27-41cb-9900-3718263431c2-13qw.jpg")
}

model Conferences {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  pdfUri      String?
  logo        String     @default("https://utfs.io/f/bb000768-6c27-41cb-9900-3718263431c2-13qw.jpg")
  arContent   ArContent? @relation(fields: [arContentId], references: [id])
  enContent   EnContent? @relation(fields: [enContentId], references: [id])
  arContentId String?    @db.ObjectId
  enContentId String?    @db.ObjectId
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model PdfReference {
  id  String  @id @default(auto()) @map("_id") @db.ObjectId
  ar  String?
  en  String?
  uri String?
}

model User {
  id               String  @id @default(auto()) @map("_id") @db.ObjectId
  fullName         String
  password         String
  image            String?
  cv               String?
  acadamicCondtion String?
  phone            Int     @unique
  content          String?
  role             Role    @default(teacher)

  // university       University[]
  Collage       Collage?     @relation(fields: [collageId], references: [id])
  collageId     String?      @db.ObjectId
  SectionPage   SectionPage? @relation(fields: [sectionPageId], references: [id])
  sectionPageId String?      @db.ObjectId
}

enum Role {
  admin
  teacher
  student
  superAdmin
}
